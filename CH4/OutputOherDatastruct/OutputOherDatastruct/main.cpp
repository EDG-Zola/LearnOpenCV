/************************************************************************/
/*                       输出其他数据结构                               */
/************************************************************************/
#include <iostream>
#include <stdexcept>
#include <opencv2/opencv.hpp>
#include <vector>
using namespace std;
using namespace cv;
int main(){
	/************************************************************************/
	/*                        一：定义和输出二维点                          */
	/************************************************************************/
	Point2f p2(5, 3);
	cout << "二维点p2 = " << p2 << ";" << endl << endl;

	/************************************************************************/
	/*                        二：定义和输出三维点                          */
	/************************************************************************/
	Point3f p3(8, 3, 0);
	cout << "三维点p3 = " << p3 << ";" << endl << endl;

	/************************************************************************/
	/*               三：定义和输出基于Mat的std::vector                     */
	/************************************************************************/
	vector<int> iv(10);
	for (vector<int>::size_type index = 0; index != iv.size(); ++index)
	{
		iv[index] = index;
	}
	cout << "基于Mat的vector = " << Mat(iv) << ";" << endl << endl;

	/************************************************************************/
	/*               三：定义和输出std::vector                     */
	/************************************************************************/
	vector<Point2f> points(10);
	for (vector<Point2f>::size_type index = 0; index != iv.size(); ++index){
		points[index] = Point2f(static_cast<float> (index * 5), static_cast<float> (index % 7));
	}
	cout << "二维向量点points = " << points << ";" << endl << endl;

}